var pager = {
	props: {
		pagerData:{
			type: Object,
			default:function(){
				return{
					data:[],
					rows:[]
				}
			}
			
		}
	},
	creaded:function(){
		alert();
		this.showPage(1, null, true);
	},
	template: '<table class="table table-bordered table-responsive table-striped">\
                    <tr>\
						<th v-for="item in rows" v-on:click="sortBy(item.name)">{{item.label}}</th>\
                    </tr>\
					<tr v-for="dataItem in arrayData | orderBy sortparam sorttype">\
						<td v-for="item in rows">{{dataItem[item.name]}}</td>\
                    </tr>\
                </table>\
				<div class="pager" id="pager">\
                    <span class="form-inline">\
                        <select class="form-control" v-model="pagesize" v-on:change="showPage(pageCurrent,$event,true)" number>\
                            <option v-for="item in arrPageSize" value="{{item}}">{{item}}</option>\
                        </select>\
                    </span>\
                    <template v-for="item in pageCount+1">\
                        <span v-if="item==1" class="btn btn-default" v-on:click="showPage(1,$event)">首页</span>\
                        <span v-if="item==1" class="btn btn-default" v-on:click="showPage(pageCurrent-1,$event)">上一页</span>\
                        <span v-if="item==1" class="btn btn-default" v-bind:class="isActive(item)" v-on:click="showPage(item,$event)">{{item}}</span>\
                        <span v-if="item==1&&item<showPagesStart-1" class="btn btn-default disabled">... </span>\
                        <span v-if="item>1&&item<=pageCount-1&&item>=showPagesStart&&item<=showPageEnd&&item<=pageCount" class="btn btn-default" v-bind:class="isActive(item)" v-on:click="showPage(item,$event)">\
                            {{item}}\
                        </span>\
                        <span v-if="item==pageCount&&item>showPageEnd+1" class="btn btn-default disabled">...</span>\
                        <span v-if="item==pageCount&&item!=1" class="btn btn-default" v-bind:class="isActive(item)" v-on:click="showPage(item,$event)">\
                            {{item}}\
                        </span>\
                        <span v-if="item==pageCount" class="btn btn-default" v-on:click="showPage(pageCurrent+1,$event)">下一页</span>\
                        <span v-if="item==pageCount" class="btn btn-default" v-on:click="showPage(pageCount,$event)">尾页</span>\
                    </template>\
                    <span class="form-inline">\
                        <input class="pageIndex form-control" style="width:60px;text-align:center" type="text" v-model="pageCurrent" v-on:keyup.enter="showPage(pageCurrent,$event,true)" />\
                    </span>\
                    <span>{{pageCurrent}}/{{pageCount}}</span>\
                </div>',
	data:function(){
		
			return{			
			//分页大小
			pagesize:20,
			//分页数
			arrPageSize:[10,20,30,40],
			//显示列
			rows:this.pagerData.rows,
			//分页数据
			arrayData:this.pagerData.data,
			//当前页面
			pageCurrent:1,
			pageCount:1,
			//显示分页按钮数
            showPages: 11,
            //开始显示的分页按钮
            showPagesStart: 1,
            //结束显示的分页按钮
            showPageEnd: 100,
			//排序字段
			sortparam:"",
			//排序方式
			sorttype:1,
		}
	},
	computed:{
		totalCount:function(){
			return this.pagerData.data.length;
		},
	},
	methods:{
		showPage: function (pageIndex, $event, forceRefresh) {

                    if (pageIndex > 0) {
                        if (pageIndex > this.pageCount) {
                            pageIndex = this.pageCount;
                        }

                        //判断数据是否需要更新
                        var currentPageCount = Math.ceil(this.totalCount / this.pagesize);
                        if (currentPageCount != this.pageCount) {
                            pageIndex = 1;
                            this.pageCount = currentPageCount;
                        }
                        else if (this.pageCurrent == pageIndex && currentPageCount == this.pageCount && typeof (forceRefresh) == "undefined") {
                            return;
                        }
                        //从所有数据中去分页数据
                        var newPageInfo = [];
                        for (var i = 0; i < this.pagesize; i++) {
						var index =i+(pageIndex-1)*this.pagesize;
						if(index>this.totalCount-1)break;
                            newPageInfo[newPageInfo.length] = this.pagerData.data[index];
                        }
                        this.pageCurrent = pageIndex;
                        this.arrayData = newPageInfo;

                        //计算分页按钮数据
                        if (this.pageCount > this.showPages) {
                            if (pageIndex <= (this.showPages - 1) / 2) {
                                this.showPagesStart = 1;
                                this.showPageEnd = this.showPages - 1;
                            }
                            else if (pageIndex >= this.pageCount - (this.showPages - 3) / 2) {
                                this.showPagesStart = this.pageCount - this.showPages + 2;
                                this.showPageEnd = this.pageCount;
                            }
                            else {
                                this.showPagesStart = pageIndex - (this.showPages - 3) / 2;
                                this.showPageEnd = pageIndex + (this.showPages - 3) / 2;
                            }
                        }
                    }

                },sortBy: function (sortparam) {
                    this.sortparam = sortparam;
                    this.sorttype = this.sorttype == -1 ? 1 : -1;
                },isActive:function(item){
				return {active:item==this.pageCurrent}
				}
	}
	
}